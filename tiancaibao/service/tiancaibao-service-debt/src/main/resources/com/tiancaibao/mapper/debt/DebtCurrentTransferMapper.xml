<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiancaibao.mapper.debt.DebtCurrentTransferMapper">
  <resultMap id="BaseResultMap" type="com.tiancaibao.pojo.debt.DebtCurrentTransfer">
    <!--          -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="invest_id" jdbcType="BIGINT" property="investId" />
    <result column="debt_original_asset_id" jdbcType="BIGINT" property="debtOriginalAssetId" />
    <result column="rate" jdbcType="INTEGER" property="rate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="original_amount" jdbcType="BIGINT" property="originalAmount" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="original_count" jdbcType="INTEGER" property="originalCount" />
    <result column="count" jdbcType="INTEGER" property="count" />
    <result column="end_date" jdbcType="TIMESTAMP" property="endDate" />
    <result column="other_info" jdbcType="VARCHAR" property="otherInfo" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="lock_status" jdbcType="INTEGER" property="lockStatus" />
    <result column="user_holding_id" jdbcType="INTEGER" property="userHoldingId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--          -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--          -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--          -->
    id, user_id, invest_id, debt_original_asset_id, rate, status, original_amount, amount, 
    original_count, count, end_date, other_info, created_at, updated_at, deleted_at, 
    lock_status, user_holding_id
  </sql>
  <select id="selectByExample" parameterType="com.tiancaibao.pojo.debt.DebtCurrentTransferExample" resultMap="BaseResultMap">
    <!--          -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from debt_current_transfer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--          -->
    select 
    <include refid="Base_Column_List" />
    from debt_current_transfer
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--          -->
    delete from debt_current_transfer
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tiancaibao.pojo.debt.DebtCurrentTransferExample">
    <!--          -->
    delete from debt_current_transfer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.tiancaibao.pojo.debt.DebtCurrentTransfer">
    <!--          -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into debt_current_transfer (user_id, invest_id, debt_original_asset_id, 
      rate, status, original_amount, 
      amount, original_count, count, 
      end_date, other_info, created_at, 
      updated_at, deleted_at, lock_status, 
      user_holding_id)
    values (#{userId,jdbcType=BIGINT}, #{investId,jdbcType=BIGINT}, #{debtOriginalAssetId,jdbcType=BIGINT}, 
      #{rate,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{originalAmount,jdbcType=BIGINT}, 
      #{amount,jdbcType=BIGINT}, #{originalCount,jdbcType=INTEGER}, #{count,jdbcType=INTEGER}, 
      #{endDate,jdbcType=TIMESTAMP}, #{otherInfo,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{deletedAt,jdbcType=TIMESTAMP}, #{lockStatus,jdbcType=INTEGER}, 
      #{userHoldingId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.tiancaibao.pojo.debt.DebtCurrentTransfer">
    <!--          -->
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into debt_current_transfer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="investId != null">
        invest_id,
      </if>
      <if test="debtOriginalAssetId != null">
        debt_original_asset_id,
      </if>
      <if test="rate != null">
        rate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="originalAmount != null">
        original_amount,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="originalCount != null">
        original_count,
      </if>
      <if test="count != null">
        count,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="otherInfo != null">
        other_info,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="lockStatus != null">
        lock_status,
      </if>
      <if test="userHoldingId != null">
        user_holding_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="investId != null">
        #{investId,jdbcType=BIGINT},
      </if>
      <if test="debtOriginalAssetId != null">
        #{debtOriginalAssetId,jdbcType=BIGINT},
      </if>
      <if test="rate != null">
        #{rate,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="originalAmount != null">
        #{originalAmount,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="originalCount != null">
        #{originalCount,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        #{count,jdbcType=INTEGER},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="otherInfo != null">
        #{otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lockStatus != null">
        #{lockStatus,jdbcType=INTEGER},
      </if>
      <if test="userHoldingId != null">
        #{userHoldingId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tiancaibao.pojo.debt.DebtCurrentTransferExample" resultType="java.lang.Long">
    <!--          -->
    select count(*) from debt_current_transfer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--          -->
    update debt_current_transfer
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.investId != null">
        invest_id = #{record.investId,jdbcType=BIGINT},
      </if>
      <if test="record.debtOriginalAssetId != null">
        debt_original_asset_id = #{record.debtOriginalAssetId,jdbcType=BIGINT},
      </if>
      <if test="record.rate != null">
        rate = #{record.rate,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.originalAmount != null">
        original_amount = #{record.originalAmount,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.originalCount != null">
        original_count = #{record.originalCount,jdbcType=INTEGER},
      </if>
      <if test="record.count != null">
        count = #{record.count,jdbcType=INTEGER},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.otherInfo != null">
        other_info = #{record.otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lockStatus != null">
        lock_status = #{record.lockStatus,jdbcType=INTEGER},
      </if>
      <if test="record.userHoldingId != null">
        user_holding_id = #{record.userHoldingId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--          -->
    update debt_current_transfer
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      invest_id = #{record.investId,jdbcType=BIGINT},
      debt_original_asset_id = #{record.debtOriginalAssetId,jdbcType=BIGINT},
      rate = #{record.rate,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      original_amount = #{record.originalAmount,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=BIGINT},
      original_count = #{record.originalCount,jdbcType=INTEGER},
      count = #{record.count,jdbcType=INTEGER},
      end_date = #{record.endDate,jdbcType=TIMESTAMP},
      other_info = #{record.otherInfo,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      lock_status = #{record.lockStatus,jdbcType=INTEGER},
      user_holding_id = #{record.userHoldingId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tiancaibao.pojo.debt.DebtCurrentTransfer">
    <!--          -->
    update debt_current_transfer
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="investId != null">
        invest_id = #{investId,jdbcType=BIGINT},
      </if>
      <if test="debtOriginalAssetId != null">
        debt_original_asset_id = #{debtOriginalAssetId,jdbcType=BIGINT},
      </if>
      <if test="rate != null">
        rate = #{rate,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="originalAmount != null">
        original_amount = #{originalAmount,jdbcType=BIGINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="originalCount != null">
        original_count = #{originalCount,jdbcType=INTEGER},
      </if>
      <if test="count != null">
        count = #{count,jdbcType=INTEGER},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=TIMESTAMP},
      </if>
      <if test="otherInfo != null">
        other_info = #{otherInfo,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="lockStatus != null">
        lock_status = #{lockStatus,jdbcType=INTEGER},
      </if>
      <if test="userHoldingId != null">
        user_holding_id = #{userHoldingId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tiancaibao.pojo.debt.DebtCurrentTransfer">
    <!--          -->
    update debt_current_transfer
    set user_id = #{userId,jdbcType=BIGINT},
      invest_id = #{investId,jdbcType=BIGINT},
      debt_original_asset_id = #{debtOriginalAssetId,jdbcType=BIGINT},
      rate = #{rate,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      original_amount = #{originalAmount,jdbcType=BIGINT},
      amount = #{amount,jdbcType=BIGINT},
      original_count = #{originalCount,jdbcType=INTEGER},
      count = #{count,jdbcType=INTEGER},
      end_date = #{endDate,jdbcType=TIMESTAMP},
      other_info = #{otherInfo,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      lock_status = #{lockStatus,jdbcType=INTEGER},
      user_holding_id = #{userHoldingId,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
    <!-- 债券的匹配 -->
	<select id="selectTransferMatch" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from debt_current_transfer
		<where>
			<if test="ids != null">
				id in
				<foreach item="id" index="index" collection="ids" open="("
					separator="," close=")">
					#{id}
				</foreach>
				and
			</if>
			STATUS = 1 OR STATUS = 2
			order by amount DESC
		</where>
	</select>
	<!-- 添加记录成功后的ID -->
	<select id="getLastInsertId" resultType="long">
		SELECT LAST_INSERT_ID()
	</select>
</mapper>