<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiancaibao.mapper.debt.DebtCurrentUserHoldingMapper">
	<resultMap id="BaseResultMap"
		type="com.tiancaibao.pojo.debt.DebtCurrentUserHolding">
		<!-- -->
		<id column="id" jdbcType="BIGINT" property="id" />
		<result column="user_id" jdbcType="BIGINT" property="userId" />
		<result column="invest_id" jdbcType="BIGINT" property="investId" />
		<result column="debt_original_asset_id" jdbcType="BIGINT"
			property="debtOriginalAssetId" />
		<result column="current_count" jdbcType="INTEGER" property="currentCount" />
		<result column="original_count" jdbcType="INTEGER" property="originalCount" />
		<result column="amount" jdbcType="BIGINT" property="amount" />
		<result column="original_amount" jdbcType="BIGINT" property="originalAmount" />
		<result column="other_info1" jdbcType="VARCHAR" property="otherInfo1" />
		<result column="other_info2" jdbcType="VARCHAR" property="otherInfo2" />
		<result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
		<result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
		<result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
		<result column="frozen_count" jdbcType="INTEGER" property="frozenCount" />
		<result column="transfer_id" jdbcType="BIGINT" property="transferId" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- -->
		id, user_id, invest_id, debt_original_asset_id, current_count,
		original_count, amount,
		original_amount, other_info1, other_info2,
		created_at, updated_at, deleted_at,
		frozen_count,
		transfer_id
	</sql>
	<select id="selectByExample"
		parameterType="com.tiancaibao.pojo.debt.DebtCurrentUserHoldingExample"
		resultMap="BaseResultMap">
		<!-- -->
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from debt_current_user_holding
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="java.lang.Long"
		resultMap="BaseResultMap">
		<!-- -->
		select
		<include refid="Base_Column_List" />
		from debt_current_user_holding
		where id = #{id,jdbcType=BIGINT}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		<!-- -->
		delete from debt_current_user_holding
		where id = #{id,jdbcType=BIGINT}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.tiancaibao.pojo.debt.DebtCurrentUserHoldingExample">
		<!-- -->
		delete from debt_current_user_holding
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert" parameterType="com.tiancaibao.pojo.debt.DebtCurrentUserHolding">
		<!-- -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into debt_current_user_holding (user_id, invest_id,
		debt_original_asset_id,
		current_count, original_count, amount,
		original_amount, other_info1, other_info2,
		created_at, updated_at,
		deleted_at,
		frozen_count, transfer_id)
		values
		(#{userId,jdbcType=BIGINT}, #{investId,jdbcType=BIGINT},
		#{debtOriginalAssetId,jdbcType=BIGINT},
		#{currentCount,jdbcType=INTEGER}, #{originalCount,jdbcType=INTEGER},
		#{amount,jdbcType=BIGINT},
		#{originalAmount,jdbcType=BIGINT},
		#{otherInfo1,jdbcType=VARCHAR}, #{otherInfo2,jdbcType=VARCHAR},
		#{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP},
		#{deletedAt,jdbcType=TIMESTAMP},
		#{frozenCount,jdbcType=INTEGER},
		#{transferId,jdbcType=BIGINT})
	</insert>
	<insert id="insertSelective" parameterType="com.tiancaibao.pojo.debt.DebtCurrentUserHolding">
		<!-- -->
		<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
			SELECT
			LAST_INSERT_ID()
		</selectKey>
		insert into debt_current_user_holding
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="investId != null">
				invest_id,
			</if>
			<if test="debtOriginalAssetId != null">
				debt_original_asset_id,
			</if>
			<if test="currentCount != null">
				current_count,
			</if>
			<if test="originalCount != null">
				original_count,
			</if>
			<if test="amount != null">
				amount,
			</if>
			<if test="originalAmount != null">
				original_amount,
			</if>
			<if test="otherInfo1 != null">
				other_info1,
			</if>
			<if test="otherInfo2 != null">
				other_info2,
			</if>
			<if test="createdAt != null">
				created_at,
			</if>
			<if test="updatedAt != null">
				updated_at,
			</if>
			<if test="deletedAt != null">
				deleted_at,
			</if>
			<if test="frozenCount != null">
				frozen_count,
			</if>
			<if test="transferId != null">
				transfer_id,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=BIGINT},
			</if>
			<if test="investId != null">
				#{investId,jdbcType=BIGINT},
			</if>
			<if test="debtOriginalAssetId != null">
				#{debtOriginalAssetId,jdbcType=BIGINT},
			</if>
			<if test="currentCount != null">
				#{currentCount,jdbcType=INTEGER},
			</if>
			<if test="originalCount != null">
				#{originalCount,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				#{amount,jdbcType=BIGINT},
			</if>
			<if test="originalAmount != null">
				#{originalAmount,jdbcType=BIGINT},
			</if>
			<if test="otherInfo1 != null">
				#{otherInfo1,jdbcType=VARCHAR},
			</if>
			<if test="otherInfo2 != null">
				#{otherInfo2,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				#{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				#{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="deletedAt != null">
				#{deletedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="frozenCount != null">
				#{frozenCount,jdbcType=INTEGER},
			</if>
			<if test="transferId != null">
				#{transferId,jdbcType=BIGINT},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.tiancaibao.pojo.debt.DebtCurrentUserHoldingExample"
		resultType="java.lang.Long">
		<!-- -->
		select count(*) from debt_current_user_holding
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- -->
		update debt_current_user_holding
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=BIGINT},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=BIGINT},
			</if>
			<if test="record.investId != null">
				invest_id = #{record.investId,jdbcType=BIGINT},
			</if>
			<if test="record.debtOriginalAssetId != null">
				debt_original_asset_id =
				#{record.debtOriginalAssetId,jdbcType=BIGINT},
			</if>
			<if test="record.currentCount != null">
				current_count = #{record.currentCount,jdbcType=INTEGER},
			</if>
			<if test="record.originalCount != null">
				original_count =
				#{record.originalCount,jdbcType=INTEGER},
			</if>
			<if test="record.amount != null">
				amount = #{record.amount,jdbcType=BIGINT},
			</if>
			<if test="record.originalAmount != null">
				original_amount =
				#{record.originalAmount,jdbcType=BIGINT},
			</if>
			<if test="record.otherInfo1 != null">
				other_info1 = #{record.otherInfo1,jdbcType=VARCHAR},
			</if>
			<if test="record.otherInfo2 != null">
				other_info2 = #{record.otherInfo2,jdbcType=VARCHAR},
			</if>
			<if test="record.createdAt != null">
				created_at = #{record.createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updatedAt != null">
				updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.deletedAt != null">
				deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="record.frozenCount != null">
				frozen_count = #{record.frozenCount,jdbcType=INTEGER},
			</if>
			<if test="record.transferId != null">
				transfer_id = #{record.transferId,jdbcType=BIGINT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- -->
		update debt_current_user_holding
		set id = #{record.id,jdbcType=BIGINT},
		user_id = #{record.userId,jdbcType=BIGINT},
		invest_id =
		#{record.investId,jdbcType=BIGINT},
		debt_original_asset_id =
		#{record.debtOriginalAssetId,jdbcType=BIGINT},
		current_count =
		#{record.currentCount,jdbcType=INTEGER},
		original_count =
		#{record.originalCount,jdbcType=INTEGER},
		amount =
		#{record.amount,jdbcType=BIGINT},
		original_amount =
		#{record.originalAmount,jdbcType=BIGINT},
		other_info1 =
		#{record.otherInfo1,jdbcType=VARCHAR},
		other_info2 =
		#{record.otherInfo2,jdbcType=VARCHAR},
		created_at =
		#{record.createdAt,jdbcType=TIMESTAMP},
		updated_at =
		#{record.updatedAt,jdbcType=TIMESTAMP},
		deleted_at =
		#{record.deletedAt,jdbcType=TIMESTAMP},
		frozen_count =
		#{record.frozenCount,jdbcType=INTEGER},
		transfer_id =
		#{record.transferId,jdbcType=BIGINT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="com.tiancaibao.pojo.debt.DebtCurrentUserHolding">
		<!-- -->
		update debt_current_user_holding
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=BIGINT},
			</if>
			<if test="investId != null">
				invest_id = #{investId,jdbcType=BIGINT},
			</if>
			<if test="debtOriginalAssetId != null">
				debt_original_asset_id =
				#{debtOriginalAssetId,jdbcType=BIGINT},
			</if>
			<if test="currentCount != null">
				current_count = #{currentCount,jdbcType=INTEGER},
			</if>
			<if test="originalCount != null">
				original_count = #{originalCount,jdbcType=INTEGER},
			</if>
			<if test="amount != null">
				amount = #{amount,jdbcType=BIGINT},
			</if>
			<if test="originalAmount != null">
				original_amount = #{originalAmount,jdbcType=BIGINT},
			</if>
			<if test="otherInfo1 != null">
				other_info1 = #{otherInfo1,jdbcType=VARCHAR},
			</if>
			<if test="otherInfo2 != null">
				other_info2 = #{otherInfo2,jdbcType=VARCHAR},
			</if>
			<if test="createdAt != null">
				created_at = #{createdAt,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="deletedAt != null">
				deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
			</if>
			<if test="frozenCount != null">
				frozen_count = #{frozenCount,jdbcType=INTEGER},
			</if>
			<if test="transferId != null">
				transfer_id = #{transferId,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.tiancaibao.pojo.debt.DebtCurrentUserHolding">
		<!-- -->
		update debt_current_user_holding
		set user_id =
		#{userId,jdbcType=BIGINT},
		invest_id = #{investId,jdbcType=BIGINT},
		debt_original_asset_id = #{debtOriginalAssetId,jdbcType=BIGINT},
		current_count = #{currentCount,jdbcType=INTEGER},
		original_count =
		#{originalCount,jdbcType=INTEGER},
		amount = #{amount,jdbcType=BIGINT},
		original_amount = #{originalAmount,jdbcType=BIGINT},
		other_info1 =
		#{otherInfo1,jdbcType=VARCHAR},
		other_info2 =
		#{otherInfo2,jdbcType=VARCHAR},
		created_at =
		#{createdAt,jdbcType=TIMESTAMP},
		updated_at =
		#{updatedAt,jdbcType=TIMESTAMP},
		deleted_at =
		#{deletedAt,jdbcType=TIMESTAMP},
		frozen_count =
		#{frozenCount,jdbcType=INTEGER},
		transfer_id =
		#{transferId,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
	<!-- 根据用户id获取用户当前持有债权的总金额 -->
	<select id="getDebtUserHoldingAmountAll" parameterType="java.lang.Long"
		resultType="java.lang.Long">
		select sum(amount) from debt_current_user_holding
		<if test="userId != null">
			where user_id=#{userId}
		</if>
	</select>
	<!-- 随心转投资未满24h的总金额 -->
	<select id="selectAmountByCondtion" resultType="long">
		SELECT
		SUM(amount) FROM debt_current_user_holding where
		substring_index(TIMEDIFF(NOW(),created_at),":",1)+0 &lt; 24 and
		user_id=
		#{userId}
	</select>
	<!-- 随心转可转份数 -->
	<select id="selectTransferableCount" resultType="long">
		SELECT
		SUM(current_count) FROM debt_current_user_holding where
		substring_index(TIMEDIFF(NOW(),created_at),":",1)+0 &gt;=24 and
		user_id=
		#{userId}
	</select>
	<!-- 获取用户当前持有的可转活期债权 -->
	<select id="selectCurrentTransferableDebtRecords" resultType="com.tiancaibao.pojo.debt.DebtCurrentUserHolding"
		resultMap="BaseResultMap" parameterType="java.lang.Long">
		SELECT
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from debt_current_user_holding
		where
		substring_index(TIMEDIFF(NOW(),created_at),":",1)+0 &gt;=24 and
		user_id=
		#{userId}
		order by current_count desc
	</select>
</mapper>