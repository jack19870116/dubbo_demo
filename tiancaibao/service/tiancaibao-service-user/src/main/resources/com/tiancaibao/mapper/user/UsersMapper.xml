<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tiancaibao.mapper.user.UsersMapper">
  <resultMap id="BaseResultMap" type="com.tiancaibao.pojo.user.Users">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="idcard_name" jdbcType="VARCHAR" property="idcardName" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="fixed_amount" jdbcType="BIGINT" property="fixedAmount" />
    <result column="account_amount" jdbcType="BIGINT" property="accountAmount" />
    <result column="idcard_number" jdbcType="VARCHAR" property="idcardNumber" />
    <result column="idcard_province" jdbcType="CHAR" property="idcardProvince" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="invited_by_user_id" jdbcType="BIGINT" property="invitedByUserId" />
    <result column="talent_value" jdbcType="BIGINT" property="talentValue" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="is_encryption" jdbcType="BIT" property="isEncryption" />
    <result column="trading_password" jdbcType="VARCHAR" property="tradingPassword" />
    <result column="one_thousand_at" jdbcType="DATE" property="oneThousandAt" />
    <result column="two_thousand_at" jdbcType="DATE" property="twoThousandAt" />
    <result column="five_thousand_at" jdbcType="DATE" property="fiveThousandAt" />
    <result column="deleted_at" jdbcType="TIMESTAMP" property="deletedAt" />
    <result column="remember_token" jdbcType="VARCHAR" property="rememberToken" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="open_id" jdbcType="VARCHAR" property="openId" />
    <result column="agent_num" jdbcType="VARCHAR" property="agentNum" />
    <result column="huifu_password" jdbcType="VARCHAR" property="huifuPassword" />
    <result column="yb_bankcard" jdbcType="VARCHAR" property="ybBankcard" />
    <result column="yb_bankinfo" jdbcType="VARCHAR" property="ybBankinfo" />
    <result column="mark" jdbcType="INTEGER" property="mark" />
    <result column="is_deal" jdbcType="INTEGER" property="isDeal" />
    <result column="is_send" jdbcType="INTEGER" property="isSend" />
    <result column="group_id" jdbcType="SMALLINT" property="groupId" />
    <result column="channel_id" jdbcType="INTEGER" property="channelId" />
    <result column="integral" jdbcType="INTEGER" property="integral" />
    <result column="sign_num" jdbcType="INTEGER" property="signNum" />
    <result column="birthday" jdbcType="CHAR" property="birthday" />
    <result column="real_name_at" jdbcType="TIMESTAMP" property="realNameAt" />
    <result column="is_promoter" jdbcType="SMALLINT" property="isPromoter" />
    <result column="ip" jdbcType="CHAR" property="ip" />
    <result column="error_count" jdbcType="TINYINT" property="errorCount" />
    <result column="is_locking" jdbcType="TINYINT" property="isLocking" />
    <result column="tender_amount" jdbcType="BIGINT" property="tenderAmount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, idcard_name, amount, fixed_amount, account_amount, idcard_number, idcard_province, 
    phone, invited_by_user_id, talent_value, password, is_encryption, trading_password, 
    one_thousand_at, two_thousand_at, five_thousand_at, deleted_at, remember_token, created_at, 
    updated_at, open_id, agent_num, huifu_password, yb_bankcard, yb_bankinfo, mark, is_deal, 
    is_send, group_id, channel_id, integral, sign_num, birthday, real_name_at, is_promoter, 
    ip, error_count, is_locking, tender_amount
  </sql>
  <select id="selectByExample" parameterType="com.tiancaibao.pojo.user.UsersExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null">
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from users
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tiancaibao.pojo.user.UsersExample">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert"   useGeneratedKeys="true" keyProperty="id"   parameterType="com.tiancaibao.pojo.user.Users">
    insert into users (id, name, idcard_name, 
      amount, fixed_amount, account_amount, 
      idcard_number, idcard_province, phone, 
      invited_by_user_id, talent_value, password, 
      is_encryption, trading_password, one_thousand_at, 
      two_thousand_at, five_thousand_at, deleted_at, 
      remember_token, created_at, updated_at, 
      open_id, agent_num, huifu_password, 
      yb_bankcard, yb_bankinfo, mark, 
      is_deal, is_send, group_id, 
      channel_id, integral, sign_num, 
      birthday, real_name_at, is_promoter, 
      ip, error_count, is_locking, 
      tender_amount)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{idcardName,jdbcType=VARCHAR}, 
      #{amount,jdbcType=BIGINT}, #{fixedAmount,jdbcType=BIGINT}, #{accountAmount,jdbcType=BIGINT}, 
      #{idcardNumber,jdbcType=VARCHAR}, #{idcardProvince,jdbcType=CHAR}, #{phone,jdbcType=VARCHAR}, 
      #{invitedByUserId,jdbcType=BIGINT}, #{talentValue,jdbcType=BIGINT}, #{password,jdbcType=VARCHAR}, 
      #{isEncryption,jdbcType=BIT}, #{tradingPassword,jdbcType=VARCHAR}, #{oneThousandAt,jdbcType=DATE}, 
      #{twoThousandAt,jdbcType=DATE}, #{fiveThousandAt,jdbcType=DATE}, #{deletedAt,jdbcType=TIMESTAMP}, 
      #{rememberToken,jdbcType=VARCHAR}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, 
      #{openId,jdbcType=VARCHAR}, #{agentNum,jdbcType=VARCHAR}, #{huifuPassword,jdbcType=VARCHAR}, 
      #{ybBankcard,jdbcType=VARCHAR}, #{ybBankinfo,jdbcType=VARCHAR}, #{mark,jdbcType=INTEGER}, 
      #{isDeal,jdbcType=INTEGER}, #{isSend,jdbcType=INTEGER}, #{groupId,jdbcType=SMALLINT}, 
      #{channelId,jdbcType=INTEGER}, #{integral,jdbcType=INTEGER}, #{signNum,jdbcType=INTEGER}, 
      #{birthday,jdbcType=CHAR}, #{realNameAt,jdbcType=TIMESTAMP}, #{isPromoter,jdbcType=SMALLINT}, 
      #{ip,jdbcType=CHAR}, #{errorCount,jdbcType=TINYINT}, #{isLocking,jdbcType=TINYINT}, 
      #{tenderAmount,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective"   useGeneratedKeys="true" keyProperty="id"    parameterType="com.tiancaibao.pojo.user.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="idcardName != null">
        idcard_name,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="fixedAmount != null">
        fixed_amount,
      </if>
      <if test="accountAmount != null">
        account_amount,
      </if>
      <if test="idcardNumber != null">
        idcard_number,
      </if>
      <if test="idcardProvince != null">
        idcard_province,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="invitedByUserId != null">
        invited_by_user_id,
      </if>
      <if test="talentValue != null">
        talent_value,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="isEncryption != null">
        is_encryption,
      </if>
      <if test="tradingPassword != null">
        trading_password,
      </if>
      <if test="oneThousandAt != null">
        one_thousand_at,
      </if>
      <if test="twoThousandAt != null">
        two_thousand_at,
      </if>
      <if test="fiveThousandAt != null">
        five_thousand_at,
      </if>
      <if test="deletedAt != null">
        deleted_at,
      </if>
      <if test="rememberToken != null">
        remember_token,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="agentNum != null">
        agent_num,
      </if>
      <if test="huifuPassword != null">
        huifu_password,
      </if>
      <if test="ybBankcard != null">
        yb_bankcard,
      </if>
      <if test="ybBankinfo != null">
        yb_bankinfo,
      </if>
      <if test="mark != null">
        mark,
      </if>
      <if test="isDeal != null">
        is_deal,
      </if>
      <if test="isSend != null">
        is_send,
      </if>
      <if test="groupId != null">
        group_id,
      </if>
      <if test="channelId != null">
        channel_id,
      </if>
      <if test="integral != null">
        integral,
      </if>
      <if test="signNum != null">
        sign_num,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="realNameAt != null">
        real_name_at,
      </if>
      <if test="isPromoter != null">
        is_promoter,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="errorCount != null">
        error_count,
      </if>
      <if test="isLocking != null">
        is_locking,
      </if>
      <if test="tenderAmount != null">
        tender_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcardName != null">
        #{idcardName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="fixedAmount != null">
        #{fixedAmount,jdbcType=BIGINT},
      </if>
      <if test="accountAmount != null">
        #{accountAmount,jdbcType=BIGINT},
      </if>
      <if test="idcardNumber != null">
        #{idcardNumber,jdbcType=VARCHAR},
      </if>
      <if test="idcardProvince != null">
        #{idcardProvince,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="invitedByUserId != null">
        #{invitedByUserId,jdbcType=BIGINT},
      </if>
      <if test="talentValue != null">
        #{talentValue,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="isEncryption != null">
        #{isEncryption,jdbcType=BIT},
      </if>
      <if test="tradingPassword != null">
        #{tradingPassword,jdbcType=VARCHAR},
      </if>
      <if test="oneThousandAt != null">
        #{oneThousandAt,jdbcType=DATE},
      </if>
      <if test="twoThousandAt != null">
        #{twoThousandAt,jdbcType=DATE},
      </if>
      <if test="fiveThousandAt != null">
        #{fiveThousandAt,jdbcType=DATE},
      </if>
      <if test="deletedAt != null">
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="rememberToken != null">
        #{rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=VARCHAR},
      </if>
      <if test="agentNum != null">
        #{agentNum,jdbcType=VARCHAR},
      </if>
      <if test="huifuPassword != null">
        #{huifuPassword,jdbcType=VARCHAR},
      </if>
      <if test="ybBankcard != null">
        #{ybBankcard,jdbcType=VARCHAR},
      </if>
      <if test="ybBankinfo != null">
        #{ybBankinfo,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        #{mark,jdbcType=INTEGER},
      </if>
      <if test="isDeal != null">
        #{isDeal,jdbcType=INTEGER},
      </if>
      <if test="isSend != null">
        #{isSend,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        #{groupId,jdbcType=SMALLINT},
      </if>
      <if test="channelId != null">
        #{channelId,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        #{integral,jdbcType=INTEGER},
      </if>
      <if test="signNum != null">
        #{signNum,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=CHAR},
      </if>
      <if test="realNameAt != null">
        #{realNameAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isPromoter != null">
        #{isPromoter,jdbcType=SMALLINT},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=CHAR},
      </if>
      <if test="errorCount != null">
        #{errorCount,jdbcType=TINYINT},
      </if>
      <if test="isLocking != null">
        #{isLocking,jdbcType=TINYINT},
      </if>
      <if test="tenderAmount != null">
        #{tenderAmount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tiancaibao.pojo.user.UsersExample" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardName != null">
        idcard_name = #{record.idcardName,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.fixedAmount != null">
        fixed_amount = #{record.fixedAmount,jdbcType=BIGINT},
      </if>
      <if test="record.accountAmount != null">
        account_amount = #{record.accountAmount,jdbcType=BIGINT},
      </if>
      <if test="record.idcardNumber != null">
        idcard_number = #{record.idcardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.idcardProvince != null">
        idcard_province = #{record.idcardProvince,jdbcType=CHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.invitedByUserId != null">
        invited_by_user_id = #{record.invitedByUserId,jdbcType=BIGINT},
      </if>
      <if test="record.talentValue != null">
        talent_value = #{record.talentValue,jdbcType=BIGINT},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.isEncryption != null">
        is_encryption = #{record.isEncryption,jdbcType=BIT},
      </if>
      <if test="record.tradingPassword != null">
        trading_password = #{record.tradingPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.oneThousandAt != null">
        one_thousand_at = #{record.oneThousandAt,jdbcType=DATE},
      </if>
      <if test="record.twoThousandAt != null">
        two_thousand_at = #{record.twoThousandAt,jdbcType=DATE},
      </if>
      <if test="record.fiveThousandAt != null">
        five_thousand_at = #{record.fiveThousandAt,jdbcType=DATE},
      </if>
      <if test="record.deletedAt != null">
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rememberToken != null">
        remember_token = #{record.rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.openId != null">
        open_id = #{record.openId,jdbcType=VARCHAR},
      </if>
      <if test="record.agentNum != null">
        agent_num = #{record.agentNum,jdbcType=VARCHAR},
      </if>
      <if test="record.huifuPassword != null">
        huifu_password = #{record.huifuPassword,jdbcType=VARCHAR},
      </if>
      <if test="record.ybBankcard != null">
        yb_bankcard = #{record.ybBankcard,jdbcType=VARCHAR},
      </if>
      <if test="record.ybBankinfo != null">
        yb_bankinfo = #{record.ybBankinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.mark != null">
        mark = #{record.mark,jdbcType=INTEGER},
      </if>
      <if test="record.isDeal != null">
        is_deal = #{record.isDeal,jdbcType=INTEGER},
      </if>
      <if test="record.isSend != null">
        is_send = #{record.isSend,jdbcType=INTEGER},
      </if>
      <if test="record.groupId != null">
        group_id = #{record.groupId,jdbcType=SMALLINT},
      </if>
      <if test="record.channelId != null">
        channel_id = #{record.channelId,jdbcType=INTEGER},
      </if>
      <if test="record.integral != null">
        integral = #{record.integral,jdbcType=INTEGER},
      </if>
      <if test="record.signNum != null">
        sign_num = #{record.signNum,jdbcType=INTEGER},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=CHAR},
      </if>
      <if test="record.realNameAt != null">
        real_name_at = #{record.realNameAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPromoter != null">
        is_promoter = #{record.isPromoter,jdbcType=SMALLINT},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=CHAR},
      </if>
      <if test="record.errorCount != null">
        error_count = #{record.errorCount,jdbcType=TINYINT},
      </if>
      <if test="record.isLocking != null">
        is_locking = #{record.isLocking,jdbcType=TINYINT},
      </if>
      <if test="record.tenderAmount != null">
        tender_amount = #{record.tenderAmount,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set id = #{record.id,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      idcard_name = #{record.idcardName,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=BIGINT},
      fixed_amount = #{record.fixedAmount,jdbcType=BIGINT},
      account_amount = #{record.accountAmount,jdbcType=BIGINT},
      idcard_number = #{record.idcardNumber,jdbcType=VARCHAR},
      idcard_province = #{record.idcardProvince,jdbcType=CHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      invited_by_user_id = #{record.invitedByUserId,jdbcType=BIGINT},
      talent_value = #{record.talentValue,jdbcType=BIGINT},
      password = #{record.password,jdbcType=VARCHAR},
      is_encryption = #{record.isEncryption,jdbcType=BIT},
      trading_password = #{record.tradingPassword,jdbcType=VARCHAR},
      one_thousand_at = #{record.oneThousandAt,jdbcType=DATE},
      two_thousand_at = #{record.twoThousandAt,jdbcType=DATE},
      five_thousand_at = #{record.fiveThousandAt,jdbcType=DATE},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      remember_token = #{record.rememberToken,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      open_id = #{record.openId,jdbcType=VARCHAR},
      agent_num = #{record.agentNum,jdbcType=VARCHAR},
      huifu_password = #{record.huifuPassword,jdbcType=VARCHAR},
      yb_bankcard = #{record.ybBankcard,jdbcType=VARCHAR},
      yb_bankinfo = #{record.ybBankinfo,jdbcType=VARCHAR},
      mark = #{record.mark,jdbcType=INTEGER},
      is_deal = #{record.isDeal,jdbcType=INTEGER},
      is_send = #{record.isSend,jdbcType=INTEGER},
      group_id = #{record.groupId,jdbcType=SMALLINT},
      channel_id = #{record.channelId,jdbcType=INTEGER},
      integral = #{record.integral,jdbcType=INTEGER},
      sign_num = #{record.signNum,jdbcType=INTEGER},
      birthday = #{record.birthday,jdbcType=CHAR},
      real_name_at = #{record.realNameAt,jdbcType=TIMESTAMP},
      is_promoter = #{record.isPromoter,jdbcType=SMALLINT},
      ip = #{record.ip,jdbcType=CHAR},
      error_count = #{record.errorCount,jdbcType=TINYINT},
      is_locking = #{record.isLocking,jdbcType=TINYINT},
      tender_amount = #{record.tenderAmount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tiancaibao.pojo.user.Users">
    update users
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="idcardName != null">
        idcard_name = #{idcardName,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="fixedAmount != null">
        fixed_amount = #{fixedAmount,jdbcType=BIGINT},
      </if>
      <if test="accountAmount != null">
        account_amount = #{accountAmount,jdbcType=BIGINT},
      </if>
      <if test="idcardNumber != null">
        idcard_number = #{idcardNumber,jdbcType=VARCHAR},
      </if>
      <if test="idcardProvince != null">
        idcard_province = #{idcardProvince,jdbcType=CHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="invitedByUserId != null">
        invited_by_user_id = #{invitedByUserId,jdbcType=BIGINT},
      </if>
      <if test="talentValue != null">
        talent_value = #{talentValue,jdbcType=BIGINT},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="isEncryption != null">
        is_encryption = #{isEncryption,jdbcType=BIT},
      </if>
      <if test="tradingPassword != null">
        trading_password = #{tradingPassword,jdbcType=VARCHAR},
      </if>
      <if test="oneThousandAt != null">
        one_thousand_at = #{oneThousandAt,jdbcType=DATE},
      </if>
      <if test="twoThousandAt != null">
        two_thousand_at = #{twoThousandAt,jdbcType=DATE},
      </if>
      <if test="fiveThousandAt != null">
        five_thousand_at = #{fiveThousandAt,jdbcType=DATE},
      </if>
      <if test="deletedAt != null">
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="rememberToken != null">
        remember_token = #{rememberToken,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="openId != null">
        open_id = #{openId,jdbcType=VARCHAR},
      </if>
      <if test="agentNum != null">
        agent_num = #{agentNum,jdbcType=VARCHAR},
      </if>
      <if test="huifuPassword != null">
        huifu_password = #{huifuPassword,jdbcType=VARCHAR},
      </if>
      <if test="ybBankcard != null">
        yb_bankcard = #{ybBankcard,jdbcType=VARCHAR},
      </if>
      <if test="ybBankinfo != null">
        yb_bankinfo = #{ybBankinfo,jdbcType=VARCHAR},
      </if>
      <if test="mark != null">
        mark = #{mark,jdbcType=INTEGER},
      </if>
      <if test="isDeal != null">
        is_deal = #{isDeal,jdbcType=INTEGER},
      </if>
      <if test="isSend != null">
        is_send = #{isSend,jdbcType=INTEGER},
      </if>
      <if test="groupId != null">
        group_id = #{groupId,jdbcType=SMALLINT},
      </if>
      <if test="channelId != null">
        channel_id = #{channelId,jdbcType=INTEGER},
      </if>
      <if test="integral != null">
        integral = #{integral,jdbcType=INTEGER},
      </if>
      <if test="signNum != null">
        sign_num = #{signNum,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=CHAR},
      </if>
      <if test="realNameAt != null">
        real_name_at = #{realNameAt,jdbcType=TIMESTAMP},
      </if>
      <if test="isPromoter != null">
        is_promoter = #{isPromoter,jdbcType=SMALLINT},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=CHAR},
      </if>
      <if test="errorCount != null">
        error_count = #{errorCount,jdbcType=TINYINT},
      </if>
      <if test="isLocking != null">
        is_locking = #{isLocking,jdbcType=TINYINT},
      </if>
      <if test="tenderAmount != null">
        tender_amount = #{tenderAmount,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tiancaibao.pojo.user.Users">
    update users
    set name = #{name,jdbcType=VARCHAR},
      idcard_name = #{idcardName,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=BIGINT},
      fixed_amount = #{fixedAmount,jdbcType=BIGINT},
      account_amount = #{accountAmount,jdbcType=BIGINT},
      idcard_number = #{idcardNumber,jdbcType=VARCHAR},
      idcard_province = #{idcardProvince,jdbcType=CHAR},
      phone = #{phone,jdbcType=VARCHAR},
      invited_by_user_id = #{invitedByUserId,jdbcType=BIGINT},
      talent_value = #{talentValue,jdbcType=BIGINT},
      password = #{password,jdbcType=VARCHAR},
      is_encryption = #{isEncryption,jdbcType=BIT},
      trading_password = #{tradingPassword,jdbcType=VARCHAR},
      one_thousand_at = #{oneThousandAt,jdbcType=DATE},
      two_thousand_at = #{twoThousandAt,jdbcType=DATE},
      five_thousand_at = #{fiveThousandAt,jdbcType=DATE},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      remember_token = #{rememberToken,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      open_id = #{openId,jdbcType=VARCHAR},
      agent_num = #{agentNum,jdbcType=VARCHAR},
      huifu_password = #{huifuPassword,jdbcType=VARCHAR},
      yb_bankcard = #{ybBankcard,jdbcType=VARCHAR},
      yb_bankinfo = #{ybBankinfo,jdbcType=VARCHAR},
      mark = #{mark,jdbcType=INTEGER},
      is_deal = #{isDeal,jdbcType=INTEGER},
      is_send = #{isSend,jdbcType=INTEGER},
      group_id = #{groupId,jdbcType=SMALLINT},
      channel_id = #{channelId,jdbcType=INTEGER},
      integral = #{integral,jdbcType=INTEGER},
      sign_num = #{signNum,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=CHAR},
      real_name_at = #{realNameAt,jdbcType=TIMESTAMP},
      is_promoter = #{isPromoter,jdbcType=SMALLINT},
      ip = #{ip,jdbcType=CHAR},
      error_count = #{errorCount,jdbcType=TINYINT},
      is_locking = #{isLocking,jdbcType=TINYINT},
      tender_amount = #{tenderAmount,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="sumCurrentAmount" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select sum(amount)  from users
  </select>
  <select id="sumFixedAmount" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select sum(fixed_amount)  from users
  </select>
</mapper>