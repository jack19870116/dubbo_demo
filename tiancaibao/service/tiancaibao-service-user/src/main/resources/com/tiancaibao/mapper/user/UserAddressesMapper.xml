<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tiancaibao.mapper.user.UserAddressesMapper" >
  <resultMap id="BaseResultMap" type="com.tiancaibao.pojo.user.UserAddresses" >
    <id column="address_id" property="addressId" jdbcType="INTEGER" />
    <result column="address_name" property="addressName" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="zipcode" property="zipcode" jdbcType="VARCHAR" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="best_time" property="bestTime" jdbcType="VARCHAR" />
    <result column="is_default" property="isDefault" jdbcType="CHAR" />
    <result column="peisong" property="peisong" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.tiancaibao.pojo.user.UserAddresses" extends="BaseResultMap" >
    <result column="about" property="about" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      address_id, address_name, user_id, name, address, zipcode, phone, best_time, is_default, 
      peisong, updated_at, created_at, deleted_at
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <sql id="Blob_Column_List" >
    about
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.tiancaibao.pojo.user.UserAddressesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_addresses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tiancaibao.pojo.user.UserAddressesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_addresses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    address_id,address_name,user_id,name,address,zipcode,phone,best_time,is_default,peisong,updated_at,created_at,deleted_at,about
    ,
    <include refid="Blob_Column_List" />
    from user_addresses
    where address_id = #{addressId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_addresses
    where address_id = #{addressId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.tiancaibao.pojo.user.UserAddressesExample" >
    delete from user_addresses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert"   useGeneratedKeys="true" keyProperty="id" parameterType="com.tiancaibao.pojo.user.UserAddresses" >
    insert into user_addresses (address_id, address_name, user_id, 
      name, address, zipcode, 
      phone, best_time, is_default, 
      peisong, updated_at, created_at, 
      deleted_at, about)
    values (#{addressId,jdbcType=INTEGER}, #{addressName,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{zipcode,jdbcType=VARCHAR}, 
      #{phone,jdbcType=VARCHAR}, #{bestTime,jdbcType=VARCHAR}, #{isDefault,jdbcType=CHAR}, 
      #{peisong,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}, #{createdAt,jdbcType=TIMESTAMP}, 
      #{deletedAt,jdbcType=TIMESTAMP}, #{about,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective"   useGeneratedKeys="true" keyProperty="id" parameterType="com.tiancaibao.pojo.user.UserAddresses" >
    insert into user_addresses
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        address_id,
      </if>
      <if test="addressName != null" >
        address_name,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="zipcode != null" >
        zipcode,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="bestTime != null" >
        best_time,
      </if>
      <if test="isDefault != null" >
        is_default,
      </if>
      <if test="peisong != null" >
        peisong,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="deletedAt != null" >
        deleted_at,
      </if>
      <if test="about != null" >
        about,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="addressId != null" >
        #{addressId,jdbcType=INTEGER},
      </if>
      <if test="addressName != null" >
        #{addressName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="bestTime != null" >
        #{bestTime,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        #{isDefault,jdbcType=CHAR},
      </if>
      <if test="peisong != null" >
        #{peisong,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="about != null" >
        #{about,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tiancaibao.pojo.user.UserAddressesExample" resultType="java.lang.Integer" >
    select count(*) from user_addresses
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_addresses
    <set >
      <if test="record.addressId != null" >
        address_id = #{record.addressId,jdbcType=INTEGER},
      </if>
      <if test="record.addressName != null" >
        address_name = #{record.addressName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.zipcode != null" >
        zipcode = #{record.zipcode,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null" >
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.bestTime != null" >
        best_time = #{record.bestTime,jdbcType=VARCHAR},
      </if>
      <if test="record.isDefault != null" >
        is_default = #{record.isDefault,jdbcType=CHAR},
      </if>
      <if test="record.peisong != null" >
        peisong = #{record.peisong,jdbcType=INTEGER},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.deletedAt != null" >
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.about != null" >
        about = #{record.about,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update user_addresses
    set address_id = #{record.addressId,jdbcType=INTEGER},
      address_name = #{record.addressName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      zipcode = #{record.zipcode,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      best_time = #{record.bestTime,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=CHAR},
      peisong = #{record.peisong,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      about = #{record.about,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_addresses
    set address_id = #{record.addressId,jdbcType=INTEGER},
      address_name = #{record.addressName,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      zipcode = #{record.zipcode,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      best_time = #{record.bestTime,jdbcType=VARCHAR},
      is_default = #{record.isDefault,jdbcType=CHAR},
      peisong = #{record.peisong,jdbcType=INTEGER},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tiancaibao.pojo.user.UserAddresses" >
    update user_addresses
    <set >
      <if test="addressName != null" >
        address_name = #{addressName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="zipcode != null" >
        zipcode = #{zipcode,jdbcType=VARCHAR},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="bestTime != null" >
        best_time = #{bestTime,jdbcType=VARCHAR},
      </if>
      <if test="isDefault != null" >
        is_default = #{isDefault,jdbcType=CHAR},
      </if>
      <if test="peisong != null" >
        peisong = #{peisong,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="deletedAt != null" >
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="about != null" >
        about = #{about,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.tiancaibao.pojo.user.UserAddresses" >
    update user_addresses
    set address_name = #{addressName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      zipcode = #{zipcode,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      best_time = #{bestTime,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=CHAR},
      peisong = #{peisong,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      about = #{about,jdbcType=LONGVARCHAR}
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tiancaibao.pojo.user.UserAddresses" >
    update user_addresses
    set address_name = #{addressName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      zipcode = #{zipcode,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      best_time = #{bestTime,jdbcType=VARCHAR},
      is_default = #{isDefault,jdbcType=CHAR},
      peisong = #{peisong,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where address_id = #{addressId,jdbcType=INTEGER}
  </update>
</mapper>