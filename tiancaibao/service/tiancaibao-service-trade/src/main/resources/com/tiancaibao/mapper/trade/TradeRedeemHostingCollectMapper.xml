<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tiancaibao.mapper.trade.TradeRedeemHostingCollectMapper" >
  <resultMap id="BaseResultMap" type="com.tiancaibao.pojo.trade.TradeRedeemHostingCollect" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="amount" property="amount" jdbcType="BIGINT" />
    <result column="hosting_collect_order_id" property="hostingCollectOrderId" jdbcType="VARCHAR" />
    <result column="redeem_order_id" property="redeemOrderId" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
    <result column="order_code" property="orderCode" jdbcType="VARCHAR" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="deleted_at" property="deletedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <if test="fields == null" >
      id, user_id, amount, hosting_collect_order_id, redeem_order_id, status, created_at, 
      updated_at, order_code, ip, deleted_at
    </if>
    <if test="fields != null" >
      ${fields}
    </if>
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.tiancaibao.pojo.trade.TradeRedeemHostingCollectExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trade_redeem_hosting_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="startRow != null" >
      limit #{startRow} , #{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    id,user_id,amount,hosting_collect_order_id,redeem_order_id,status,created_at,updated_at,order_code,ip,deleted_at
    from trade_redeem_hosting_collect
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from trade_redeem_hosting_collect
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.tiancaibao.pojo.trade.TradeRedeemHostingCollectExample" >
    delete from trade_redeem_hosting_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert"   useGeneratedKeys="true" keyProperty="id" parameterType="com.tiancaibao.pojo.trade.TradeRedeemHostingCollect" >
    insert into trade_redeem_hosting_collect (id, user_id, amount, 
      hosting_collect_order_id, redeem_order_id, status, 
      created_at, updated_at, order_code, 
      ip, deleted_at)
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{amount,jdbcType=BIGINT}, 
      #{hostingCollectOrderId,jdbcType=VARCHAR}, #{redeemOrderId,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}, #{orderCode,jdbcType=VARCHAR}, 
      #{ip,jdbcType=VARCHAR}, #{deletedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective"   useGeneratedKeys="true" keyProperty="id" parameterType="com.tiancaibao.pojo.trade.TradeRedeemHostingCollect" >
    insert into trade_redeem_hosting_collect
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="hostingCollectOrderId != null" >
        hosting_collect_order_id,
      </if>
      <if test="redeemOrderId != null" >
        redeem_order_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createdAt != null" >
        created_at,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
      <if test="orderCode != null" >
        order_code,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="deletedAt != null" >
        deleted_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="hostingCollectOrderId != null" >
        #{hostingCollectOrderId,jdbcType=VARCHAR},
      </if>
      <if test="redeemOrderId != null" >
        #{redeemOrderId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderCode != null" >
        #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null" >
        #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.tiancaibao.pojo.trade.TradeRedeemHostingCollectExample" resultType="java.lang.Integer" >
    select count(*) from trade_redeem_hosting_collect
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update trade_redeem_hosting_collect
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.amount != null" >
        amount = #{record.amount,jdbcType=BIGINT},
      </if>
      <if test="record.hostingCollectOrderId != null" >
        hosting_collect_order_id = #{record.hostingCollectOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.redeemOrderId != null" >
        redeem_order_id = #{record.redeemOrderId,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.createdAt != null" >
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null" >
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderCode != null" >
        order_code = #{record.orderCode,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.deletedAt != null" >
        deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update trade_redeem_hosting_collect
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      amount = #{record.amount,jdbcType=BIGINT},
      hosting_collect_order_id = #{record.hostingCollectOrderId,jdbcType=VARCHAR},
      redeem_order_id = #{record.redeemOrderId,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      order_code = #{record.orderCode,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      deleted_at = #{record.deletedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.tiancaibao.pojo.trade.TradeRedeemHostingCollect" >
    update trade_redeem_hosting_collect
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="hostingCollectOrderId != null" >
        hosting_collect_order_id = #{hostingCollectOrderId,jdbcType=VARCHAR},
      </if>
      <if test="redeemOrderId != null" >
        redeem_order_id = #{redeemOrderId,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createdAt != null" >
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="orderCode != null" >
        order_code = #{orderCode,jdbcType=VARCHAR},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="deletedAt != null" >
        deleted_at = #{deletedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tiancaibao.pojo.trade.TradeRedeemHostingCollect" >
    update trade_redeem_hosting_collect
    set user_id = #{userId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=BIGINT},
      hosting_collect_order_id = #{hostingCollectOrderId,jdbcType=VARCHAR},
      redeem_order_id = #{redeemOrderId,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      order_code = #{orderCode,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      deleted_at = #{deletedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>